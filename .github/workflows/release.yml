name: release

on:
  push:
    branches:
      - master

jobs:
  release:
    timeout-minutes: 30
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: get-project-version
        id: get_project_version
        uses: avides/actions-project-version-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          file-to-check: version.txt
          only-return-version: true

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_REGISTRY_USER }}
          password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ secrets.DOCKER_REGISTRY }}/${GITHUB_REPOSITORY}:${PROJECT_VERSION},${{ secrets.DOCKER_REGISTRY }}/${GITHUB_REPOSITORY}:latest

      - name: setup-github-release
        id: setup_github_release
        env:
          PROJECT_VERSION: ${{ steps.get_project_version.outputs.version }}
        run: |
          echo ::set-output name=gitcommitmessage::$(git log --no-merges -1 --oneline)
          if [[ "$PROJECT_VERSION" == *"SNAPSHOT"* || "$PROJECT_VERSION" == *"RC"* ]]; then
            echo ::set-output name=isprerelease::true
          fi

      - name: github-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GPR_TOKEN }}
        with:
          tag_name: ${{ steps.get_project_version.outputs.version }}
          release_name: ${{ steps.get_project_version.outputs.version }}
          body: ${{ steps.setup_github_release.outputs.gitcommitmessage }}
          prerelease: ${{ steps.setup_github_release.outputs.isprerelease }}
